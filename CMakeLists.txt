PROJECT(Initd)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.7)

SET(APP_PATH "./build")
MESSAGE(STATUS ${APP_PATH})

MESSAGE(STATUS ${PROJECT_BINARY_DIR})
MESSAGE(STATUS ${PROJECT_SOURCE_DIR})

#SET(COMPILER_MODULES "Initd")
SET(COMPILER_MODULES "Property")


LINK_DIRECTORIES(/usr/lib)
LINK_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/thirdparty/libs)

IF(COMPILER_MODULES STREQUAL "Initd")
ADD_DEFINITIONS(-DInitD)
ADD_SUBDIRECTORY(init)
ADD_SUBDIRECTORY(property)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/thirdparty/inc)
AUX_SOURCE_DIRECTORY(. MAIN_SRC)
ADD_EXECUTABLE(Initd ${MAIN_SRC})
TARGET_LINK_LIBRARIES(Initd init WHEEL_1_0 pthread)
ELSEIF(COMPILER_MODULES STREQUAL "Property")
ADD_SUBDIRECTORY(property)
ADD_SUBDIRECTORY(init)
ADD_DEFINITIONS(-DPROPERTY_UNIT_TEST)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/thirdparty/inc)
AUX_SOURCE_DIRECTORY(. MAIN_SRC)
ADD_EXECUTABLE(Property ${MAIN_SRC})
TARGET_LINK_LIBRARIES(Property property WHEEL_1_0 pthread)
ENDIF()

MESSAGE(STATUS "link executable Initd")
